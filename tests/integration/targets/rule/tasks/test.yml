---
- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Create rules."
  rule:
    server_url: "{{ checkmk_var_server_url }}"
    site: "{{ outer_item.site }}"
    automation_user: "{{ checkmk_var_automation_user }}"
    automation_secret: "{{ checkmk_var_automation_secret }}"
    ruleset: "{{ item.ruleset }}"
    rule: "{{ item.rule }}"
    state: "present"
  delegate_to: localhost
  run_once: true  # noqa run-once[task]
  loop: "{{ checkmk_var_rules }}"
  register: created_rules

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Debug registered variable."
  debug:
    var: created_rules

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Modify rules."
  rule:
    server_url: "{{ checkmk_var_server_url }}"
    site: "{{ outer_item.site }}"
    automation_user: "{{ checkmk_var_automation_user }}"
    automation_secret: "{{ checkmk_var_automation_secret }}"
    ruleset: "{{ item.content.extensions.ruleset }}"
    rule:
      rule_id: "{{ item.content.id }}"
      conditions: "{{ item.content.extensions.conditions }}"
      properties: 
          comment: "{{ item.content.extensions.properties.comment }}"
          description: "New description"
      value_raw: "{{ item.content.extensions.value_raw }}"
    state: "present"
  delegate_to: localhost
  run_once: true  # noqa run-once[task]
  loop: "{{ created_rules.results }}"
  loop_control:
      label: "{{ item.content.id }}"

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Modify rules. Again."
  rule:
    server_url: "{{ checkmk_var_server_url }}"
    site: "{{ outer_item.site }}"
    automation_user: "{{ checkmk_var_automation_user }}"
    automation_secret: "{{ checkmk_var_automation_secret }}"
    ruleset: "{{ item.content.extensions.ruleset }}"
    rule:
      rule_id: "{{ item.content.id }}"
      conditions: "{{ item.content.extensions.conditions }}"
      properties: 
          comment: "{{ item.content.extensions.properties.comment }}"
          description: "New description"
      value_raw: "{{ item.content.extensions.value_raw }}"
    state: "present"
  delegate_to: localhost
  run_once: true  # noqa run-once[task]
  loop: "{{ created_rules.results }}"
  loop_control:
      label: "{{ item.content.id }}"
  register: rule_result

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Fail if changed."  # noqa no-handler
  ansible.builtin.fail:
    msg: "Rule changed!"
  when: "rule_result.changed"
  delegate_to: localhost
  run_once: true  # noqa run-once[task]

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Modify rules found by a lookup."
  rule:
    server_url: "{{ checkmk_var_server_url }}"
    site: "{{ outer_item.site }}"
    automation_user: "{{ checkmk_var_automation_user }}"
    automation_secret: "{{ checkmk_var_automation_secret }}"
    ruleset: "{{ item.extensions.ruleset }}"
    rule:
      rule_id: "{{ item.id }}"
      conditions: "{{ item.extensions.conditions }}"
      properties: 
          comment: "{{ item.extensions.properties.comment }}"
          description: "Even newer description"
      value_raw: "{{ item.extensions.value_raw }}"
    state: "present"
  delegate_to: localhost
  run_once: true  # noqa run-once[task]
  loop: "{{ lookup('checkmk.general.rules', 
      ruleset='checkgroup_parameters:filesystem',
      comment_regex='Ansible managed',
      server_url=checkmk_var_server_url,
      site=outer_item.site,
      automation_user=checkmk_var_automation_user,
      automation_secret=checkmk_var_automation_secret,
      validate_certs=False
      )
    }}"
  loop_control:
      label: "{{ item.id }}"

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Delete rules."
  rule:
    server_url: "{{ checkmk_var_server_url }}"
    site: "{{ outer_item.site }}"
    automation_user: "{{ checkmk_var_automation_user }}"
    automation_secret: "{{ checkmk_var_automation_secret }}"
    ruleset: "{{ item.content.extensions.ruleset }}"
    rule:
      rule_id: "{{ item.content.id }}"
    state: "absent"
  delegate_to: localhost
  run_once: true  # noqa run-once[task]
  loop: "{{ created_rules.results }}"
  loop_control:
      label: "{{ item.content.id }}"

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Activate."
  activation:
    server_url: "{{ checkmk_var_server_url }}"
    site: "{{ outer_item.site }}"
    automation_user: "{{ checkmk_var_automation_user }}"
    automation_secret: "{{ checkmk_var_automation_secret }}"
    force_foreign_changes: true
    sites:
      - "{{ outer_item.site }}"
  delegate_to: localhost
  run_once: true  # noqa run-once[task]

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Delete rules."
  rule:
    server_url: "{{ checkmk_var_server_url }}"
    site: "{{ outer_item.site }}"
    automation_user: "{{ checkmk_var_automation_user }}"
    automation_secret: "{{ checkmk_var_automation_secret }}"
    ruleset: "{{ item.content.extensions.ruleset }}"
    rule:
      rule_id: "{{ item.content.id }}"
    state: "absent"
  delegate_to: localhost
  run_once: true  # noqa run-once[task]
  loop: "{{ created_rules.results }}"
  loop_control:
      label: "{{ item.content.id }}"

- name: "{{ outer_item.version }} - {{ outer_item.edition | upper }} - Fail if changed."  # noqa no-handler
  ansible.builtin.fail:
    msg: "Rule changed!"
  when: "rule_result.changed"
  delegate_to: localhost
  run_once: true  # noqa run-once[task]
